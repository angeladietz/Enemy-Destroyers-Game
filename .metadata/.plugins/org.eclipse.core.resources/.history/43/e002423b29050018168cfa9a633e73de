import javax.swing.ImageIcon;
import javax.swing.JLabel;

public abstract class enemyAbstraction {

	private int lives = 3;
	private int X; //X coordinate of enemy
	private int Y; //Y coordinate of enemy 
	public JLabel enemy;

	/**
	 * constructor to initialize the user
	 * @param uL
	 */
	public enemyAbstraction(JLabel eL){
		enemy = eL;
	}
	
	/**
	 * @return - enemy JLabel
	 */
	public JLabel getLabel(){
		return enemy;
	}
	
	public void setImage(){
		if (lives ==2){
			enemy.setIcon(new ImageIcon("medBlue.png"));
		}
		else if (lives ==1){
			enemy.setIcon(new ImageIcon("darkBlue.png"));
		}
	}
	
	/**
	 * @return - X coordinate of user
	 */
	public int getx(){
		return enemy.getX();
	}

	/**
	 * @return Y coordinate of user
	 */
	public int gety(){
		return enemy.getY();
	}

	/**
	 * moves user right
	 */
	public void moveR(){
		X= getx();
		Y = gety();
		enemy.setLocation(X+getSpeed(),Y);
	}

	/**
	 * returns the number of lives of an enemy
	 */
	public int getLives(){
		return lives;
	}
			
	
	/**
	 * moves user left
	 */
	public void moveL(){
		X= getx();
		Y = gety();
		enemy.setLocation(X-getSpeed(),Y);
	}
/**
 * moves enemy down
 */
	public void moveD(){
		X= getx();
		Y = gety();
		enemy.setLocation(X,Y+getSpeed());
	}
	
	
	public void moveBack(){
		X= getx();
		Y = gety();
		enemy.setLocation(X,Y-701);
	}
	
	public void lostLife(){
		lives--;
	}
	
	/**
	 * abstract method that returns speed for each character
	 * @return character speed
	 */
	public abstract int getSpeed();

	/**
	 * abstract method that returns length for each character
	 * @return character length
	 */
	public abstract int getLength();

	/**
	 * abstract method that returns the image for each character
	 * @return character image (colour)
	 */
	public abstract ImageIcon getII();

	public abstract void Attack();
}

